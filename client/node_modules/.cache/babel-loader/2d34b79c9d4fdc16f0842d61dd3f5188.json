{"ast":null,"code":"var _jsxFileName = \"/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport updateDailyTimetable from \"../booking\"; //Styling Imports\n\nimport { GlobalStyles } from \"../GlobalStyles.style\";\nimport { Button } from \"../components/Button.style\";\nimport { Container, RowContainer } from \"../components/Container.style\";\nimport { NavBar } from \"../components/NavigationBar.style\";\nimport { ListItem } from \"../components/ListItem.style\"; // let allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar selectedAppointment = \"Please select appointment\";\n\nfunction HomePage() {\n  _s();\n\n  const [value, setValue] = useState(new Date());\n  const [appointments, setAppointments] = useState(null);\n  const [selectedValue, setSelectedValue] = useState(\"Nothing Selected\");\n\n  const bookAppointment = () => {\n    // Function that runs when the \"Book Appointment\" Button is pressed\n    try {\n      // Retrieve details for the post body\n      let year = selectedAppointment.getYear() + 1900;\n      let month = selectedAppointment.getUTCMonth() + 1;\n      let day = selectedAppointment.getDate();\n      let hours = selectedAppointment.getHours();\n      let minutes = selectedAppointment.getUTCMinutes();\n      fetch('api/appointments', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          day: day,\n          month: month,\n          year: year,\n          hour: hours,\n          minute: minutes,\n          user: \"arieldeveloper\"\n        })\n      });\n    } catch {\n      console.log(\"Please select a time\");\n    }\n\n    setSelectedValue(\"Booked\");\n  };\n\n  const getDateString = date => {\n    let dateString = date.toString().split(' ').splice(0, 4).join(' ');\n    return dateString;\n  };\n\n  const getDateTimeString = date => {\n    let dateString = date.toString().split(' ').splice(0, 5).join(' ');\n    return dateString;\n  };\n\n  const getHourString = date => {\n    let dateString = date.toString().split(' ').splice(4, 1).join(' ');\n    return dateString;\n  };\n\n  const handleInput = element => {\n    selectedAppointment = element.date;\n    setSelectedValue(getDateTimeString(element.date));\n  }; //Import Data from MongoDB\n\n\n  useEffect(() => {\n    getAppointments();\n\n    async function getAppointments() {\n      const apiURL = \"api/appointments\";\n      const response = await fetch(apiURL);\n      const data = await response.json();\n      const updatedData = updateDailyTimetable(9, 17, 60, value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n      setAppointments(updatedData);\n    }\n  }); //\n\n  return [/*#__PURE__*/_jsxDEV(Container, {\n    backgroundColor: \"white\",\n    textColor: \"black\",\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/users/\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      backgroundColor: \"white\",\n      textColor: \"black\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setValue,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      backgroundColor: \"black\",\n      textColor: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" Showing Appointments For: \", getDateString(value), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: appointments && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: appointments.map((app, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            opacity: app.available.toString() === \"true\" ? 1 : 0.6,\n            onClick: app.available.toString() === \"true\" ? () => handleInput(app) : null,\n            children: [\" \", getHourString(app.date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" Appointment Selected: \", selectedValue, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        backgroundColor: \"#3366ff\",\n        onClick: bookAppointment,\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this)];\n}\n\n_s(HomePage, \"gs0Fo7TkxFhEF3qDSNDSo6XXZso=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js"],"names":["React","useState","useEffect","Link","Calendar","updateDailyTimetable","GlobalStyles","Button","Container","RowContainer","NavBar","ListItem","selectedAppointment","HomePage","value","setValue","Date","appointments","setAppointments","selectedValue","setSelectedValue","bookAppointment","year","getYear","month","getUTCMonth","day","getDate","hours","getHours","minutes","getUTCMinutes","fetch","method","headers","body","JSON","stringify","hour","minute","user","console","log","getDateString","date","dateString","toString","split","splice","join","getDateTimeString","getHourString","handleInput","element","getAppointments","apiURL","response","data","json","updatedData","getUTCDate","getUTCFullYear","map","app","index","available"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport updateDailyTimetable from \"../booking\";\n\n//Styling Imports\nimport { GlobalStyles } from \"../GlobalStyles.style\";\nimport { Button} from \"../components/Button.style\";\nimport { Container, RowContainer } from \"../components/Container.style\";\nimport { NavBar } from \"../components/NavigationBar.style\";\nimport { ListItem } from \"../components/ListItem.style\";\n\n\n// let allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nvar selectedAppointment = \"Please select appointment\";\n\nfunction HomePage() {\n    const [value, setValue] = useState(new Date());\n    const [appointments, setAppointments] = useState(null);\n    const [selectedValue, setSelectedValue] = useState(\"Nothing Selected\");\n\n    const bookAppointment = () => {\n        // Function that runs when the \"Book Appointment\" Button is pressed\n        try {\n            // Retrieve details for the post body\n            let year = selectedAppointment.getYear() + 1900;\n            let month = selectedAppointment.getUTCMonth() + 1;\n            let day = selectedAppointment.getDate();\n            let hours = selectedAppointment.getHours();\n            let minutes = selectedAppointment.getUTCMinutes();\n\n            fetch('api/appointments', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    day: day,\n                    month: month,\n                    year: year,\n                    hour: hours,\n                    minute: minutes,\n                    user: \"arieldeveloper\",\n                })\n            })\n\n        } catch {\n            console.log(\"Please select a time\");\n        }\n        setSelectedValue(\"Booked\");\n    }\n\n    const getDateString = (date) => {\n        let dateString = date.toString().split(' ').splice(0, 4).join(' ');\n        return dateString;\n    }\n\n    const getDateTimeString = (date) => {\n        let dateString = date.toString().split(' ').splice(0, 5).join(' ');\n        return dateString;\n    }\n\n    const getHourString = (date) => {\n        let dateString = date.toString().split(' ').splice(4, 1).join(' ');\n        return dateString;\n    }\n\n\n    const handleInput = (element) => {\n        selectedAppointment = element.date;\n        setSelectedValue(getDateTimeString(element.date));\n    }\n\n    //Import Data from MongoDB\n    useEffect(() => {\n\n        getAppointments();\n\n        async function getAppointments() {\n            const apiURL = \"api/appointments\"\n            const response = await fetch(apiURL);\n            const data = await response.json();\n            const updatedData = updateDailyTimetable(9, 17, 60,\n                value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n            setAppointments(updatedData);\n        }\n    });\n\n    //\n    return (\n        [<Container backgroundColor=\"white\" textColor=\"black\">\n            <GlobalStyles/>\n\n            <NavBar>\n                <h1>Book Appointment</h1>\n                <div> </div>\n                <Link to=\"/users/\">Login</Link>\n            </NavBar>\n\n            <Container backgroundColor=\"white\"  textColor=\"black\">\n                <Calendar onChange={ setValue } value={value}/>\n            </Container>\n\n            <Container backgroundColor=\"black\"  textColor=\"white\">\n            <h3> Showing Appointments For: { getDateString(value) } </h3>\n            <div>\n            { appointments && (\n                <div>\n                    {appointments.map((app, index) => (\n                        <ListItem opacity={app.available.toString() === \"true\" ? 1: 0.6} onClick={app.available.toString() === \"true\" ? (() => handleInput(app)) : null}> { getHourString(app.date) }</ListItem>\n                    ))}\n                </div>\n            ) }\n            </div>\n            <h4> Appointment Selected: { selectedValue } </h4>\n            <Button backgroundColor=\"#3366ff\" onClick={bookAppointment}>Book Appointment</Button>\n            </Container>\n\n        </Container>]\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}