{"ast":null,"code":"var _jsxFileName = \"/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport updateDailyTimetable from \"../components/booking\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction HomePage() {\n  _s();\n\n  const [value, setValue] = useState(new Date());\n  const [appointments, setAppointments] = useState(null);\n  const [slots, setSlots] = useState({\n    \"3:00\": \"available\",\n    \"4:00\": \"available\",\n    \"5:00\": \"available\"\n  });\n\n  const bookAppointment = () => {\n    console.log('booked appointment for ' + value);\n  };\n\n  const getDateString = () => {\n    let dateString = value.toString().split(' ').splice(0, 4).join(' ');\n    return dateString;\n  };\n\n  function updateTableUI() {\n    const updatedData = updateDailyTimetable(9, 17, 60, value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n    setAppointments(updatedData);\n  } //Import Data from MongoDB\n\n\n  useEffect(() => {\n    getAppointments();\n\n    async function getAppointments() {\n      const apiURL = \"api/appointments\";\n      const response = await fetch(apiURL);\n      const data = await response.json();\n      const updatedData = updateDailyTimetable(9, 17, 60, value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n      setAppointments(updatedData);\n    }\n  }, []); //\n\n  return [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Home\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/users\",\n        children: \" Users \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setValue,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Appointment Date: \", getDateString(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), appointments && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: appointments.map((app, index) => /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [allMonths[app.month - 1], \" \", app.day, \", \", app.year, \"at \", app.hour, \":\", \"0\" + app.minute, \", Availability: \", app.available.toString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bookAppointment,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this)];\n}\n\n_s(HomePage, \"3Jj9yag2q/GoLeeYC2h/6XLj6H8=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js"],"names":["React","useState","useEffect","Link","Calendar","updateDailyTimetable","allMonths","HomePage","value","setValue","Date","appointments","setAppointments","slots","setSlots","bookAppointment","console","log","getDateString","dateString","toString","split","splice","join","updateTableUI","updatedData","getUTCDate","getUTCMonth","getUTCFullYear","data","getAppointments","apiURL","response","fetch","json","map","app","index","month","day","year","hour","minute","available"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport updateDailyTimetable from \"../components/booking\";\n\nlet allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction HomePage() {\n    const [value, setValue] = useState(new Date());\n    const [appointments, setAppointments] = useState(null);\n    const [slots, setSlots] = useState({ \"3:00\": \"available\", \"4:00\": \"available\", \"5:00\": \"available\"})\n\n    const bookAppointment = () => {\n        console.log('booked appointment for ' + value);\n    }\n    const getDateString = () => {\n        let dateString = value.toString().split(' ').splice(0, 4).join(' ');\n        return dateString;\n    }\n\n    function updateTableUI() {\n        const updatedData = updateDailyTimetable(9, 17, 60,\n            value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n\n        setAppointments(updatedData);\n    }\n    //Import Data from MongoDB\n    useEffect(() => {\n        getAppointments();\n\n        async function getAppointments() {\n            const apiURL = \"api/appointments\"\n            const response = await fetch(apiURL);\n            const data = await response.json();\n            const updatedData = updateDailyTimetable(9, 17, 60,\n                value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n\n            setAppointments(updatedData);\n        }\n\n    }, []);\n\n    //\n    return (\n        [<div>\n            <h1>Home\n                <Link to=\"/users\"> Users </Link></h1>\n\n            <Calendar onChange={ setValue }\n                      value={value}/>\n\n            <h3> Appointment Date: { getDateString() } </h3>\n\n            { appointments && (\n                <div>\n                    {appointments.map((app, index) => (\n                        <h5>{ allMonths[app.month - 1] } { app.day }, { app.year }\n                        at {app.hour }:{ \"0\" + app.minute },\n                            Availability: {app.available.toString()} </h5>\n                    ))}\n                </div>\n            ) }\n\n            <button onClick={bookAppointment}>Book Appointment</button>\n\n\n        </div>]\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}