{"ast":null,"code":"var _jsxFileName = \"/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport calendar from \"../components/calender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction HomePage() {\n  _s();\n\n  const [posts, setPosts] = useState(null);\n  const [value, onChange] = useState(new Date());\n  const [appointments, setAppointments] = useState(null);\n\n  const bookAppointment = () => {\n    console.log('booked appointment for ' + value);\n  };\n\n  const getDateString = () => {\n    let dateString = value.toString().split(' ').splice(0, 4).join(' ');\n    return dateString;\n  }; //Import Data from MongoDB\n\n\n  useEffect(() => {\n    getData();\n\n    async function getData() {\n      const apiURL = \"api/posts\";\n      const response = await fetch(apiURL);\n      const data = await response.json();\n      console.log(data);\n      setPosts(data);\n    }\n  }, []);\n  useEffect(() => {\n    getAppointments();\n\n    async function getAppointments() {\n      const apiURL = \"api/appointments\";\n      const response = await fetch(apiURL);\n      const data = await response.json();\n      setAppointments(data);\n    }\n  }, []); // Get the calendar timetable\n\n  async function returnAllAppointments() {\n    const apiURL = \"api/appointments\";\n    const response = await fetch(apiURL);\n    const data = await response.json();\n    return data;\n  } // let calenderData = calendar.populateDailyTimetable(9, 17, 30, 1, 1, 2021, returnAllAppointments());\n\n\n  let calenderData = {\n    \"3:00\": \"available\",\n    \"4:00\": \"available\",\n    \"5:00\": \"available\"\n  };\n  return [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), calenderData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"calenderData.map((value, index) => (\", /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: value.month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), \"))\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), appointments && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: appointments.map((app, index) => /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Booked: \", allMonths[app.month - 1], \", \", app.year, \" at \", app.hour, \":\", app.minute]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Appointment Date: \", getDateString(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bookAppointment,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/users\",\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this)];\n}\n\n_s(HomePage, \"wBvE0hWcYpXgddBaeAvzsaY41Ls=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js"],"names":["React","useState","useEffect","Link","Calendar","calendar","allMonths","HomePage","posts","setPosts","value","onChange","Date","appointments","setAppointments","bookAppointment","console","log","getDateString","dateString","toString","split","splice","join","getData","apiURL","response","fetch","data","json","getAppointments","returnAllAppointments","calenderData","month","map","app","index","year","hour","minute"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport calendar from \"../components/calender\";\n\nlet allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction HomePage() {\n    const [posts, setPosts] = useState(null);\n    const [value, onChange] = useState(new Date());\n    const [appointments, setAppointments] = useState(null);\n\n    const bookAppointment = () => {\n        console.log('booked appointment for ' + value);\n    }\n    const getDateString = () => {\n        let dateString = value.toString().split(' ').splice(0, 4).join(' ');\n        return dateString;\n    }\n\n    //Import Data from MongoDB\n    useEffect(() => {\n        getData();\n\n        async function getData() {\n            const apiURL = \"api/posts\"\n            const response = await fetch(apiURL);\n            const data = await response.json();\n            console.log(data);\n            setPosts(data);\n        }\n    }, []);\n    useEffect(() => {\n        getAppointments();\n\n        async function getAppointments() {\n            const apiURL = \"api/appointments\"\n            const response = await fetch(apiURL);\n            const data = await response.json();\n            setAppointments(data);\n        }\n\n    }, []);\n\n    // Get the calendar timetable\n    async function returnAllAppointments() {\n        const apiURL = \"api/appointments\"\n        const response = await fetch(apiURL);\n        const data = await response.json();\n        return data\n    }\n\n    // let calenderData = calendar.populateDailyTimetable(9, 17, 30, 1, 1, 2021, returnAllAppointments());\n    let calenderData = { \"3:00\": \"available\", \"4:00\": \"available\", \"5:00\": \"available\"};\n    return (\n        [<div>\n            <h1>Home</h1>\n            <Calendar onChange={onChange}\n                      value={value}/>\n            {( calenderData &&\n                <div>calenderData.map((value, index) => (\n                        <h5>{value.month}</h5>))\n                </div>)}\n\n            { appointments && (\n                <div>\n                    {appointments.map((app, index) => (\n                        <h5>Booked: {allMonths[app.month - 1]}, { app.year } at {app.hour }:{ app.minute }</h5>\n                    ))}\n                </div>\n            ) }\n            \n            <h3> Appointment Date: { getDateString() } </h3>\n            <button onClick={bookAppointment}>Book Appointment</button>\n\n            <Link to=\"/users\">Users</Link>\n        </div>]\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}