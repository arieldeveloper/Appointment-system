{"ast":null,"code":"// All functions pertaining to the appointment system\nlet testData = [{\n  \"user\": \"admin\",\n  \"_id\": \"6123cba99675f82c73adb053\",\n  \"day\": 23,\n  \"month\": 8,\n  \"year\": 2021,\n  \"hour\": 12,\n  \"minute\": 23,\n  \"__v\": 0\n}, {\n  \"user\": \"admin\",\n  \"_id\": \"6123ce632ef8d32cd5083baf\",\n  \"day\": 23,\n  \"month\": 3,\n  \"year\": 2021,\n  \"hour\": 12,\n  \"minute\": 23,\n  \"__v\": 0\n}, {\n  \"user\": \"admin\",\n  \"_id\": \"6123cf0fcaa6162cf9a95e19\",\n  \"day\": 23,\n  \"month\": 3,\n  \"year\": 2021,\n  \"hour\": 12,\n  \"minute\": 23,\n  \"__v\": 0\n}, {\n  \"user\": \"admin\",\n  \"_id\": \"6123cf4f777bc62d15c4605a\",\n  \"day\": 23,\n  \"month\": 3,\n  \"year\": 2021,\n  \"hour\": 12,\n  \"minute\": 23,\n  \"__v\": 0\n}, {\n  \"user\": \"arieldeveloper\",\n  \"_id\": \"6123cf53777bc62d15c4605c\",\n  \"day\": 23,\n  \"month\": 3,\n  \"year\": 2021,\n  \"hour\": 12,\n  \"minute\": 23,\n  \"__v\": 0\n}, {\n  \"user\": \"arieldeveloper\",\n  \"_id\": \"6123ff4c777bc62d15c46062\",\n  \"day\": 1,\n  \"month\": 1,\n  \"year\": 2021,\n  \"hour\": 11,\n  \"minute\": 0,\n  \"__v\": 0\n}, {\n  \"user\": \"arieldeveloper\",\n  \"_id\": \"6123ff50777bc62d15c46064\",\n  \"day\": 1,\n  \"month\": 1,\n  \"year\": 2021,\n  \"hour\": 12,\n  \"minute\": 0,\n  \"__v\": 0\n}, {\n  \"user\": \"arieldeveloper\",\n  \"_id\": \"6123ff53777bc62d15c46066\",\n  \"day\": 1,\n  \"month\": 1,\n  \"year\": 2021,\n  \"hour\": 6,\n  \"minute\": 0,\n  \"__v\": 0\n}];\n\nfunction generateTimetable(startTime, endTime, interval) {\n  // Creates an time table slots given a start time, end time and intervals\n  // startTime > 0 && endTime < 24, intervals < 60 (interval given in minutes)\n  // ex. generateTimetable(3, 5, 60);\n  // [{ hour: 3, minute: 15, available: false}, { time: \"4:00\", available: true}, { time: \"5:00\", available: true}]\n  let timeTableObj = [];\n\n  for (var hour = startTime; hour < endTime + 1; hour++) {\n    for (var minute = 0; minute < 60 / interval * interval; minute += interval) {\n      let newObj = {};\n      newObj.hour = hour;\n      newObj.minute = minute;\n      newObj.available = true;\n      timeTableObj.push(newObj);\n    }\n  }\n\n  return timeTableObj;\n}\n\nfunction getDaysBookedSlots(day, month, year, data) {\n  // Returns the given days booked slots as objects inside an array\n  var newArray = data.filter(function (appointment) {\n    return appointment.day === day && appointment.month === month && appointment.year === year;\n  });\n  return newArray;\n}\n\nfunction updateDailyTimetable(startTime, endTime, interval, day, month, year, data) {\n  // Example call: console.log(updateDailyTimetable(5, 17, 30,1,1, 2021, testData));\n  // Populates a newly generated timetable with the already booked slots\n  let newTimeTable = generateTimetable(startTime, endTime, interval); // generate a new table\n  // returns all the booked time slots for the current day in JSON\n\n  let bookedTimes = getDaysBookedSlots(day, month, year, data); // Loop through all avaiable slots and make them unavailable based on booked time slots\n\n  for (var i = 0; i < newTimeTable.length; i++) {\n    for (var j = 0; j < bookedTimes.length; j++) {\n      if (bookedTimes[j].hour === newTimeTable[i].hour && bookedTimes[j].minute === newTimeTable[i].minute) {\n        // slot is already booked\n        newTimeTable[i].available = false;\n      }\n    }\n  }\n\n  return newTimeTable;\n}\n\nexport default updateDailyTimetable;","map":{"version":3,"sources":["/Users/arielchouminov/Desktop/web-app/client/src/components/booking.js"],"names":["testData","generateTimetable","startTime","endTime","interval","timeTableObj","hour","minute","newObj","available","push","getDaysBookedSlots","day","month","year","data","newArray","filter","appointment","updateDailyTimetable","newTimeTable","bookedTimes","i","length","j"],"mappings":"AAAA;AACA,IAAIA,QAAQ,GAAG,CAAC;AAAC,UAAO,OAAR;AAAgB,SAAM,0BAAtB;AAAiD,SAAM,EAAvD;AAA0D,WAAQ,CAAlE;AAAoE,UAAO,IAA3E;AAAgF,UAAO,EAAvF;AAA0F,YAAS,EAAnG;AAAsG,SAAM;AAA5G,CAAD,EACX;AAAC,UAAO,OAAR;AAAgB,SAAM,0BAAtB;AAAiD,SAAM,EAAvD;AAA0D,WAAQ,CAAlE;AAAoE,UAAO,IAA3E;AAAgF,UAAO,EAAvF;AAA0F,YAAS,EAAnG;AAAsG,SAAM;AAA5G,CADW,EAEX;AAAC,UAAO,OAAR;AAAgB,SAAM,0BAAtB;AAAiD,SAAM,EAAvD;AAA0D,WAAQ,CAAlE;AAAoE,UAAO,IAA3E;AAAgF,UAAO,EAAvF;AAA0F,YAAS,EAAnG;AAAsG,SAAM;AAA5G,CAFW,EAGX;AAAC,UAAO,OAAR;AAAgB,SAAM,0BAAtB;AAAiD,SAAM,EAAvD;AAA0D,WAAQ,CAAlE;AAAoE,UAAO,IAA3E;AAAgF,UAAO,EAAvF;AAA0F,YAAS,EAAnG;AAAsG,SAAM;AAA5G,CAHW,EAIX;AAAC,UAAO,gBAAR;AAAyB,SAAM,0BAA/B;AAA0D,SAAM,EAAhE;AAAmE,WAAQ,CAA3E;AAA6E,UAAO,IAApF;AAAyF,UAAO,EAAhG;AAAmG,YAAS,EAA5G;AAA+G,SAAM;AAArH,CAJW,EAKX;AAAC,UAAO,gBAAR;AAAyB,SAAM,0BAA/B;AAA0D,SAAM,CAAhE;AAAkE,WAAQ,CAA1E;AAA4E,UAAO,IAAnF;AAAwF,UAAO,EAA/F;AAAkG,YAAS,CAA3G;AAA6G,SAAM;AAAnH,CALW,EAMX;AAAC,UAAO,gBAAR;AAAyB,SAAM,0BAA/B;AAA0D,SAAM,CAAhE;AAAkE,WAAQ,CAA1E;AAA4E,UAAO,IAAnF;AAAwF,UAAO,EAA/F;AAAkG,YAAS,CAA3G;AAA6G,SAAM;AAAnH,CANW,EAOX;AAAC,UAAO,gBAAR;AAAyB,SAAM,0BAA/B;AAA0D,SAAM,CAAhE;AAAkE,WAAQ,CAA1E;AAA4E,UAAO,IAAnF;AAAwF,UAAO,CAA/F;AAAiG,YAAS,CAA1G;AAA4G,SAAM;AAAlH,CAPW,CAAf;;AAUA,SAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,OAAtC,EAA+CC,QAA/C,EAAyD;AACrD;AACA;AACA;AACA;AACA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,IAAI,GAAGJ,SAAhB,EAA2BI,IAAI,GAAIH,OAAO,GAAG,CAA7C,EAAiDG,IAAI,EAArD,EAAyD;AACrD,SAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAI,KAAKH,QAAN,GAAkBA,QAAhD,EAA0DG,MAAM,IAAIH,QAApE,EAA8E;AAC1E,UAAII,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACF,IAAP,GAAcA,IAAd;AACAE,MAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AACAC,MAAAA,MAAM,CAACC,SAAP,GAAmB,IAAnB;AACAJ,MAAAA,YAAY,CAACK,IAAb,CAAkBF,MAAlB;AACH;AACJ;;AACD,SAAOH,YAAP;AACH;;AAED,SAASM,kBAAT,CAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8CC,IAA9C,EAAoD;AAChD;AACA,MAAIC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAY,UAAUC,WAAV,EAAuB;AAC9C,WAAQA,WAAW,CAACN,GAAZ,KAAoBA,GAApB,IAA2BM,WAAW,CAACL,KAAZ,KAAsBA,KAAjD,IACDK,WAAW,CAACJ,IAAZ,KAAqBA,IAD5B;AAEH,GAHc,CAAf;AAIA,SAAOE,QAAP;AACH;;AAGD,SAASG,oBAAT,CAA8BjB,SAA9B,EAAyCC,OAAzC,EAAkDC,QAAlD,EAA4DQ,GAA5D,EAAiEC,KAAjE,EAAwEC,IAAxE,EAA8EC,IAA9E,EAAoF;AAChF;AAEA;AACA,MAAIK,YAAY,GAAGnB,iBAAiB,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,QAArB,CAApC,CAJgF,CAIZ;AAEpE;;AACA,MAAIiB,WAAW,GAAGV,kBAAkB,CAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAmBC,IAAnB,CAApC,CAPgF,CAShF;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACE,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;AACzC,UAAIH,WAAW,CAACG,CAAD,CAAX,CAAelB,IAAf,KAAwBc,YAAY,CAACE,CAAD,CAAZ,CAAgBhB,IAAxC,IACAe,WAAW,CAACG,CAAD,CAAX,CAAejB,MAAf,KAA0Ba,YAAY,CAACE,CAAD,CAAZ,CAAgBf,MAD9C,EACsD;AAClD;AACAa,QAAAA,YAAY,CAACE,CAAD,CAAZ,CAAgBb,SAAhB,GAA4B,KAA5B;AACH;AACJ;AACJ;;AACD,SAAOW,YAAP;AACC;;AAEL,eAAeD,oBAAf","sourcesContent":["// All functions pertaining to the appointment system\nlet testData = [{\"user\":\"admin\",\"_id\":\"6123cba99675f82c73adb053\",\"day\":23,\"month\":8,\"year\":2021,\"hour\":12,\"minute\":23,\"__v\":0},\n    {\"user\":\"admin\",\"_id\":\"6123ce632ef8d32cd5083baf\",\"day\":23,\"month\":3,\"year\":2021,\"hour\":12,\"minute\":23,\"__v\":0},\n    {\"user\":\"admin\",\"_id\":\"6123cf0fcaa6162cf9a95e19\",\"day\":23,\"month\":3,\"year\":2021,\"hour\":12,\"minute\":23,\"__v\":0},\n    {\"user\":\"admin\",\"_id\":\"6123cf4f777bc62d15c4605a\",\"day\":23,\"month\":3,\"year\":2021,\"hour\":12,\"minute\":23,\"__v\":0},\n    {\"user\":\"arieldeveloper\",\"_id\":\"6123cf53777bc62d15c4605c\",\"day\":23,\"month\":3,\"year\":2021,\"hour\":12,\"minute\":23,\"__v\":0},\n    {\"user\":\"arieldeveloper\",\"_id\":\"6123ff4c777bc62d15c46062\",\"day\":1,\"month\":1,\"year\":2021,\"hour\":11,\"minute\":0,\"__v\":0},\n    {\"user\":\"arieldeveloper\",\"_id\":\"6123ff50777bc62d15c46064\",\"day\":1,\"month\":1,\"year\":2021,\"hour\":12,\"minute\":0,\"__v\":0},\n    {\"user\":\"arieldeveloper\",\"_id\":\"6123ff53777bc62d15c46066\",\"day\":1,\"month\":1,\"year\":2021,\"hour\":6,\"minute\":0,\"__v\":0}];\n\n\nfunction generateTimetable(startTime, endTime, interval) {\n    // Creates an time table slots given a start time, end time and intervals\n    // startTime > 0 && endTime < 24, intervals < 60 (interval given in minutes)\n    // ex. generateTimetable(3, 5, 60);\n    // [{ hour: 3, minute: 15, available: false}, { time: \"4:00\", available: true}, { time: \"5:00\", available: true}]\n    let timeTableObj = [];\n\n    for (var hour = startTime; hour < (endTime + 1); hour++) {\n        for (var minute = 0; minute < (60 / interval) * interval; minute += interval) {\n            let newObj = {};\n            newObj.hour = hour;\n            newObj.minute = minute;\n            newObj.available = true;\n            timeTableObj.push(newObj);\n        }\n    }\n    return timeTableObj;\n}\n\nfunction getDaysBookedSlots(day, month, year, data) {\n    // Returns the given days booked slots as objects inside an array\n    var newArray = data.filter(function (appointment) {\n        return (appointment.day === day && appointment.month === month\n            && appointment.year === year);\n    });\n    return newArray\n}\n\n\nfunction updateDailyTimetable(startTime, endTime, interval, day, month, year, data) {\n    // Example call: console.log(updateDailyTimetable(5, 17, 30,1,1, 2021, testData));\n\n    // Populates a newly generated timetable with the already booked slots\n    let newTimeTable = generateTimetable(startTime, endTime, interval); // generate a new table\n\n    // returns all the booked time slots for the current day in JSON\n    let bookedTimes = getDaysBookedSlots(day, month, year, data);\n\n    // Loop through all avaiable slots and make them unavailable based on booked time slots\n    for (var i = 0; i < newTimeTable.length; i++) {\n        for (var j = 0; j < bookedTimes.length; j++) {\n            if (bookedTimes[j].hour === newTimeTable[i].hour &&\n                bookedTimes[j].minute === newTimeTable[i].minute) {\n                // slot is already booked\n                newTimeTable[i].available = false;\n            }\n        }\n    }\n    return newTimeTable;\n    }\n\nexport default updateDailyTimetable;\n\n"]},"metadata":{},"sourceType":"module"}