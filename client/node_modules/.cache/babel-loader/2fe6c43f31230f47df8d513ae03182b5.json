{"ast":null,"code":"var _jsxFileName = \"/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport updateDailyTimetable from \"../components/booking\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction HomePage() {\n  _s();\n\n  var globalData = [];\n  const [value, setValue] = useState(new Date());\n  const [appointments, setAppointments] = useState(null);\n  const [slots, setSlots] = useState({\n    \"3:00\": \"available\",\n    \"4:00\": \"available\",\n    \"5:00\": \"available\"\n  });\n  const [selectedValue, setSelectedValue] = useState(\"Nothing Selected\");\n\n  const bookAppointment = () => {\n    console.log('booked appointment for ' + value);\n  };\n\n  const getDateString = () => {\n    let dateString = value.toString().split(' ').splice(0, 4).join(' ');\n    return dateString;\n  };\n\n  const handleInput = e => {\n    const btnValue = e.target.value;\n    let hour = btnValue[0]; //[app.hour, app.minute, app.day, app.month, app.year]\n\n    let minute = btnValue[1];\n    let month = btnValue[2];\n    let year = btnValue[3];\n    setSelectedValue(hour + \" \" + minute + \" \" + allMonths[month] + \" \" + year);\n  }; //Import Data from MongoDB\n\n\n  useEffect(() => {\n    getAppointments();\n\n    async function getAppointments() {\n      const apiURL = \"api/appointments\";\n      const response = await fetch(apiURL);\n      const data = await response.json();\n      const updatedData = updateDailyTimetable(9, 17, 60, value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n      setAppointments(updatedData);\n    }\n  }); //\n\n  return [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Home\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/users\",\n        children: \" Users \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setValue,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Showing Appointments For: \", getDateString(), \" \", value.getUTCFullYear(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), appointments && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: appointments.map((app, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInput,\n        value: [app.hour, app.minute, app.day, app.month, app.year],\n        children: [allMonths[app.month - 1], \" \", app.day, \", \", app.year, \"at \", app.hour, \":\", \"0\" + app.minute, \", Availability: \", app.available.toString(), \" } \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this) // <h5>{ allMonths[app.month - 1] } { app.day }, { app.year }\n      // at {app.hour }:{ \"0\" + app.minute },\n      //     Availability: {app.available.toString()} }\n      // </h5>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" Appointment Selected: \", selectedValue, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bookAppointment,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this)];\n}\n\n_s(HomePage, \"djImLkglsU1ExldVQo1ER2WAlZo=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/arielchouminov/Desktop/web-app/client/src/pages/home.js"],"names":["React","useState","useEffect","Link","Calendar","updateDailyTimetable","allMonths","HomePage","globalData","value","setValue","Date","appointments","setAppointments","slots","setSlots","selectedValue","setSelectedValue","bookAppointment","console","log","getDateString","dateString","toString","split","splice","join","handleInput","e","btnValue","target","hour","minute","month","year","getAppointments","apiURL","response","fetch","data","json","updatedData","getUTCDate","getUTCMonth","getUTCFullYear","map","app","index","day","available"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,OAAOC,oBAAP,MAAiC,uBAAjC;;AAEA,IAAIC,SAAS,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAhB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAIU,IAAJ,EAAD,CAAlC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AAAE,YAAQ,WAAV;AAAuB,YAAQ,WAA/B;AAA4C,YAAQ;AAApD,GAAD,CAAlC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,kBAAD,CAAlD;;AACA,QAAMiB,eAAe,GAAG,MAAM;AAE1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BX,KAAxC;AACH,GAHD;;AAIA,QAAMY,aAAa,GAAG,MAAM;AACxB,QAAIC,UAAU,GAAGb,KAAK,CAACc,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4BC,MAA5B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyCC,IAAzC,CAA8C,GAA9C,CAAjB;AACA,WAAOJ,UAAP;AACH,GAHD;;AAKA,QAAMK,WAAW,GAAGC,CAAC,IAAI;AACrB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASrB,KAA1B;AACA,QAAIsB,IAAI,GAAGF,QAAQ,CAAC,CAAD,CAAnB,CAFqB,CAGrB;;AACA,QAAIG,MAAM,GAAGH,QAAQ,CAAC,CAAD,CAArB;AACA,QAAII,KAAK,GAAGJ,QAAQ,CAAC,CAAD,CAApB;AACA,QAAIK,IAAI,GAAGL,QAAQ,CAAC,CAAD,CAAnB;AAEAZ,IAAAA,gBAAgB,CAACc,IAAI,GAAG,GAAP,GAAaC,MAAb,GAAsB,GAAtB,GAA4B1B,SAAS,CAAC2B,KAAD,CAArC,GAA+C,GAA/C,GAAqDC,IAAtD,CAAhB;AACH,GATD,CAfgB,CA0BhB;;;AACAhC,EAAAA,SAAS,CAAC,MAAM;AAEZiC,IAAAA,eAAe;;AAEf,mBAAeA,eAAf,GAAiC;AAC7B,YAAMC,MAAM,GAAG,kBAAf;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,WAAW,GAAGpC,oBAAoB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EACpCI,KAAK,CAACiC,UAAN,EADoC,EAChBjC,KAAK,CAACkC,WAAN,KAAsB,CADN,EACSlC,KAAK,CAACmC,cAAN,EADT,EACiCL,IADjC,CAAxC;AAEA1B,MAAAA,eAAe,CAAC4B,WAAD,CAAf;AACH;AAEJ,GAbQ,CAAT,CA3BgB,CA0ChB;;AACA,SACI,cAAC;AAAA,4BACG;AAAA,sCACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAIG,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAG/B,QAArB;AACU,MAAA,KAAK,EAAED;AADjB;AAAA;AAAA;AAAA;AAAA,YAJH,eAOG;AAAA,gDAAiCY,aAAa,EAA9C,OAAoDZ,KAAK,CAACmC,cAAN,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPH,EAQKhC,YAAY,iBACV;AAAA,gBACKA,YAAY,CAACiC,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,kBACd;AAAQ,QAAA,OAAO,EAAEpB,WAAjB;AAA8B,QAAA,KAAK,EAAG,CAACmB,GAAG,CAACf,IAAL,EAAWe,GAAG,CAACd,MAAf,EAAuBc,GAAG,CAACE,GAA3B,EAAgCF,GAAG,CAACb,KAApC,EAA2Ca,GAAG,CAACZ,IAA/C,CAAtC;AAAA,mBAA+F5B,SAAS,CAACwC,GAAG,CAACb,KAAJ,GAAY,CAAb,CAAxG,OAA4Ha,GAAG,CAACE,GAAhI,QAAyIF,GAAG,CAACZ,IAA7I,SACQY,GAAG,CAACf,IADZ,OACqB,MAAMe,GAAG,CAACd,MAD/B,sBAEmBc,GAAG,CAACG,SAAJ,CAAc1B,QAAd,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,CAId;AACA;AACA;AACA;AAPH;AADL;AAAA;AAAA;AAAA;AAAA,YATP,eAsBG;AAAA,4CAA6BP,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBH,eAuBG;AAAQ,MAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CADJ;AA4BH;;GAvEQX,Q;;KAAAA,Q;AAyET,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport updateDailyTimetable from \"../components/booking\";\n\nlet allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction HomePage() {\n    var globalData = [];\n    const [value, setValue] = useState(new Date());\n    const [appointments, setAppointments] = useState(null);\n    const [slots, setSlots] = useState({ \"3:00\": \"available\", \"4:00\": \"available\", \"5:00\": \"available\"})\n    const [selectedValue, setSelectedValue] = useState(\"Nothing Selected\");\n    const bookAppointment = () => {\n\n        console.log('booked appointment for ' + value);\n    }\n    const getDateString = () => {\n        let dateString = value.toString().split(' ').splice(0, 4).join(' ');\n        return dateString;\n    }\n\n    const handleInput = e => {\n        const btnValue = e.target.value;\n        let hour = btnValue[0];\n        //[app.hour, app.minute, app.day, app.month, app.year]\n        let minute = btnValue[1];\n        let month = btnValue[2];\n        let year = btnValue[3];\n\n        setSelectedValue(hour + \" \" + minute + \" \" + allMonths[month] + \" \" + year);\n    }\n\n    //Import Data from MongoDB\n    useEffect(() => {\n\n        getAppointments();\n\n        async function getAppointments() {\n            const apiURL = \"api/appointments\"\n            const response = await fetch(apiURL);\n            const data = await response.json();\n            const updatedData = updateDailyTimetable(9, 17, 60,\n                value.getUTCDate(), value.getUTCMonth() + 1, value.getUTCFullYear(), data);\n            setAppointments(updatedData);\n        }\n\n    });\n\n    //\n    return (\n        [<div>\n            <h1>Home\n                <Link to=\"/users\"> Users </Link></h1>\n\n            <Calendar onChange={ setValue }\n                      value={value}/>\n\n            <h3> Showing Appointments For: { getDateString() } {value.getUTCFullYear()} </h3>\n            { appointments && (\n                <div>\n                    {appointments.map((app, index) => (\n                        <button onClick={handleInput} value={ [app.hour, app.minute, app.day, app.month, app.year] }>{ allMonths[app.month - 1] } { app.day }, { app.year }\n                            at {app.hour }:{ \"0\" + app.minute },\n                            Availability: {app.available.toString()} } </button>\n                        // <h5>{ allMonths[app.month - 1] } { app.day }, { app.year }\n                        // at {app.hour }:{ \"0\" + app.minute },\n                        //     Availability: {app.available.toString()} }\n                        // </h5>\n                    ))}\n                </div>\n            ) }\n\n            <h4> Appointment Selected: { selectedValue } </h4>\n            <button onClick={bookAppointment}>Book Appointment</button>\n\n        </div>]\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}